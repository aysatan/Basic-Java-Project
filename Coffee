import java.util.Scanner;
import java.util.Vector;


public class Main {

	
	Scanner scan = new Scanner(System.in);
	
	Vector<String>vName = new Vector<>();
	Vector<String>vType = new Vector<>();
	Vector<String>vSugar = new Vector<>();
	Vector<Integer>vQuantity = new Vector<>();
	Vector<Integer>vPrice = new Vector<>();
	Vector<Integer>vTotal = new Vector<>();
	
	int input, quantity, quality, price, total, x, grandPrice, inputMoney=0;
	double extraPrice=0;
	String name, type, sugar, checkOut="";
	
	void menu(){
		System.out.println("Kinata Coffee");
		System.out.println("============");
		System.out.println("1. Buy coffee");
		System.out.println("2. Check out");
		System.out.println("3. Exit");
	}
	
	public int catchNumber(){
		int a;
		try {
			a = scan.nextInt();
		} catch (Exception e) {
			a = -1;
		} scan.nextLine();
		
		return a;
	}
	
	public void coffeeName() {
		int index;
		if (vName.isEmpty()){
			System.out.print("Input coffee name [unique]: ");
			name = scan.nextLine();
			
			vName.add(name);
		}
		else {
			do {
				System.out.print("Input coffee name [unique]: ");
				name = scan.nextLine();
				index = vName.indexOf(name);
				
					if(index != -1){
						System.out.println("Coffee name must be unique");
					} 
			
				} while (index != -1);
			vName.add(name);
		}
	}
	
	void viewOrder(){
		if(vName.isEmpty()){
			System.out.println("You haven't added any order, please make a new one\nPress enter to continue...");
			scan.nextLine();
		}
		else {
			System.out.println("================================================================================");
			System.out.println("| No. | Coffee Type \t| Extra Sugar | Quantity | Price      | Total Price   |");
			System.out.println("================================================================================");
			for(int i=0; i<vName.size(); i++){
				System.out.println("| " + (i+1) + " | "+ vName.get(i) +"\t| " + vType.get(i) +"| "+ vSugar.get(i)+"|"+ vQuantity.get(i)+"|"+ vPrice.get(i)+"|"+ vTotal.get(i)+"|");
			}
			System.out.println("=================================================================================");
			System.out.println();
		}
	}
	
	
	void print(String string){
		for(int i=0;i<string.length();i++){
			System.out.print(string.charAt(i));
			try {
				Thread.sleep(200);
			} catch (InterruptedException e) {
				// TODO: handle exception
			}
		}
	}
	
	
	public Main() {
		do {
			menu();
			
			do {
				System.out.print(">> ");
				input = catchNumber();
			} while (input<1 || input>3);
			
			switch (input){
			case 1:
				
				coffeeName();
				
				do {
					System.out.print("Input coffee type [Cappuccino | Americano | Latte (sensitive)]: ");
					type = scan.nextLine();
					
					if (!type.contentEquals("Cappuccino") && !type.contentEquals("Americano") && !type.contentEquals("Latte")){
						System.out.println("Coffee type must between 'Cappuccino', 'Americano', or 'Latte");
					}
					
				} while(!type.contentEquals("Cappuccino") && !type.contentEquals("Americano") && !type.contentEquals("Latte"));
				
				
				do {
					System.out.print("Extra sugar [Yes | No (insensitive)]: ");
					sugar = scan.nextLine();
				} while(!sugar.equalsIgnoreCase("Yes") && !sugar.equalsIgnoreCase("No"));
				
				
				do {
					System.out.print("Input quantity [1-100]: ");
					quantity = catchNumber();
				} while(quantity<1 || quantity>100);
				
				vType.add(type);
				vSugar.add(sugar);
				vQuantity.add(quantity);
				
				System.out.println("Successfully add new order");
				System.out.println("Press enter to continue...");
				scan.nextLine();
				break;
			
			case 2:
				if (type.equals("Cappuccino")){
					quality = 1;
				}
				else if (type.equals("Americano")){
					quality = 2;
				}
				else {
					quality = 3;
				}
				
				price = quality*(name.length())*100;
				
				if(sugar.equals("Yes")){
					extraPrice = price*0.1;
					price += extraPrice;
					vPrice.get(price);
				}
				
				total = price*quantity;
				vTotal.get(total);
				
				viewOrder();
				
				do {
					System.out.print("Do you want to check out [Yes|No (insensitive)]: ");
					checkOut = scan.nextLine();
				} while(!checkOut.equalsIgnoreCase("Yes") && !checkOut.equalsIgnoreCase("No"));
				
				if(checkOut.equalsIgnoreCase("yes")){
					
					for(int i=0; i<vName.size(); i++){
						x = vTotal.get(i);
						x += x;
					}
					grandPrice = x;
					System.out.println("Grand Price: Rp."+grandPrice);
					
					do {
						System.out.print("Input money: ");
						inputMoney = catchNumber();
						
						if (inputMoney<grandPrice){
							System.out.println("Your money is less than your grand price");
						}
						
					} while (inputMoney<grandPrice);
					System.out.println("Press enter to continue...");
//					scan.nextLine();
				}
				else if (checkOut.equalsIgnoreCase("no")) {
					System.out.println("Order cancelled");
//					continue;
				}
				
				break;
			}
			
		} while (input!=3);
		
		//input == 3
		if(vName.size() != 0){
			System.out.println("You haven't paid your transaction yet\nPress enter to continue...");
			scan.nextLine();
		} 
		else {
			print("Thank you for using this app");
			System.exit(0);
		}
	}


	public static void main(String[] args) {
		new Main();

	}

}
