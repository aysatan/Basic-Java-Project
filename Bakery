import java.util.Random;
import java.util.Scanner;
import java.util.Vector;

public class Main {

	Scanner scan = new Scanner(System.in);
	Vector<String>vName = new Vector<>();
	Vector<String>vFlavor = new Vector<>();
	Vector<Integer>vFlour = new Vector<>();
	Vector<String>vTopping = new Vector<>();
	Vector<Integer>vSugar = new Vector<>();
	Vector<Boolean>vIsBaked = new Vector<>();
	Random rand = new Random();
	
	
	int catchNum(){
		int a=-1;
		try {
			a = scan.nextInt();
		} catch (Exception e) {
			// TODO: handle exception
		} scan.nextLine();
		return a;
	}
	
	void clear(){
		for(int i=0; i<30; i++){
			System.out.println();
		}
	}
	
	void mainMenu(){
		int input=-1;
		
		do {
			System.out.println("Homemade Cake");
			System.out.println("==============");
			System.out.println("1. Add cake to be bake");
			System.out.println("2. Bake cake");
			System.out.println("3. Change cake topping");
			System.out.println("4. View cake list");
			System.out.println("5. Exit");
			
			do {
				System.out.print("Choice: ");
				input=catchNum();
			} while(input<1 || input>5);
			
			switch(input){
			case 1:
				clear();
				addCake();
				break;
				
			case 2:
				clear();
				bakeCake();
				break;	
			
			case 3:
				clear();
				changeTopping();
				break;
				
			case 4:
				clear();
				viewCake();
				break;
			}
			
		} while(input!=5);
			System.out.println("Thank you");
			System.exit(0);
	}
	
	
	void addCake(){
		String name="", flavor="", topping="";
		int flour=-1, sugar=-1, index=-1;
	
		if(vName.isEmpty()){
			do {
				System.out.print("Input cake name [3-20]: ");
				name = scan.nextLine();
			} while (name.length()<3 || name.length()>20);
		}
		else {
			do {
					System.out.print("Input cake name [3-20]: ");
					name = scan.nextLine();
				
				index = vName.indexOf(name);
				
				if(index!=-1){
					System.out.println("Cake name must be unique!");
				}
				
			} while (index!=-1 || (name.length()<3 || name.length()>20));
		}
		
		do {
			System.out.print("Choose cake flavor [Cheese | Chocolate | Vanilla] (sensitive): ");
			flavor = scan.nextLine();
		} while(!flavor.equals("Cheese") && !flavor.equals("Chocolate") && !flavor.equals("Vanilla"));
		
		do {
			System.out.print("Input how many flour will be used (gram) [>0]: ");
			flour = catchNum();
		} while(flour<0);
		
		do {
			System.out.print("Input your cake topping [Cream | Oreo] (sensitive): ");
			topping = scan.nextLine();
		} while(!topping.equals("Cream") && !topping.equals("Oreo"));
		
		sugar = randomInt(50, 100);
		
		vName.add(name);
		vFlavor.add(flavor);
		vFlour.add(flour);
		vTopping.add(topping);
		vSugar.add(sugar);
		//***
		vIsBaked.add(false);
		
		System.out.println("The cake is made!\n");
		System.out.println(vFlavor.size() + " cake(s) are in the list\n");
	}
	
	void sortNameAsc(){
		for (int i=0; i<vFlavor.size()-1; i++){
			for (int j=i+1; j<vFlavor.size(); j++){
				if(vName.get(i).compareTo(vName.get(j))>0){
					//swap
					String tempName = vName.get(i);
					vName.set(i, vName.get(j));
					vName.set(j, tempName);
					
					int tempFlour = vFlour.get(i);
					vFlour.set(i, vFlour.get(j));
					vFlour.set(j, tempFlour);
					
					String tempTopping = vTopping.get(i);
					vTopping.set(i, vTopping.get(j));
					vTopping.set(j, tempTopping);
					
					int tempSugar = vSugar.get(i);
					vSugar.set(i, vSugar.get(j));
					vSugar.set(j, tempSugar);
				}
			}
		}
	}
	
	void print(){
		for(int i=0; i<vFlavor.size(); i++){
			System.out.println();
			System.out.println("Cake number " + (i+1));
			System.out.println("=====================");
			System.out.println("Cake name: " + vName.get(i));
			System.out.println("Cake flavor: " + vFlavor.get(i));
			System.out.println("Cake flour: " + vFlour.get(i) + "gram");
			System.out.println("Cake sugar: " + vSugar.get(i) + "gram");
			System.out.println("Cake topping: " + vTopping.get(i));
			
			//kalo vektornya ada isi jadinya baked, kalo false (gaada isi?) jadinya not baked?
			if(vIsBaked.get(i)){
				System.out.println("The cake is baked\n");
			}
			else {
				System.out.println("The cake has not been baked yet\n");
			}
		}
	}
	
	int randomInt(int min, int max){
		return rand.nextInt(max-min)+min;
	}
	
	void bakeCake(){
		int index=-1;
		boolean allbaked = true;
		
		if(vFlavor.isEmpty()){
			System.out.println("There is no cake that has been made yet");
		}
		
		else {
			sortNameAsc();
			print();
		
				for(int i=0; i<vFlavor.size(); i++){
					if(vIsBaked.get(i) == false){
						allbaked = false;
					}
				}
				
				if(allbaked==true){
					System.out.println("All cake is baked\n");
					return;
				}
				
				do {
					System.out.print("Input cake number [1-" + vFlavor.size() + "]: ");
					index = catchNum();
					
//					if(vIsBaked.get(indexSebenarnya)==true){
//						System.out.println("The cake is baked");
//					}
					
				} while(index<1 || index>vFlavor.size());
				
				index--;
				
				System.out.println("Mixing " + vFlavor.get(index) + ", " + vFlour.get(index) + "gram of flour, " + vSugar.get(index) + "gram of sugar");
				System.out.println("Baking the cake...\nPress any key to continue...");
				vIsBaked.set(index, true);
				scan.nextLine();
				
				
				
				
		}
	}
	
	
	void changeTopping(){
		int index=-1;
		String topping="";
		
		if(vFlavor.isEmpty()){
			System.out.println("There is no cake that has been made yet");
		}
		else {
			sortNameAsc();
			print();
			
			do {
				System.out.print("Input cake number [1-" + vFlavor.size() + "]: ");
				index = catchNum();
			} while(index<1 || index>vFlavor.size());
				index--;
				
			do {
				System.out.print("Input your new cake topping [Cream | Oreo]: ");
				topping = scan.nextLine();
			} while(!topping.equals("Cream") && !topping.equals("Oreo"));
			
			vTopping.set(index, topping);
			System.out.println("\nThe topping is changed");
			System.out.println("Press any key to continue...");
			scan.nextLine();
		}
	}
	
	
	void viewCake(){
		if(vFlavor.isEmpty()){
			System.out.println("There is no cake that has been made yet");
		}
		
		else {
			sortNameAsc();
			print();
			System.out.println("Press any key to continue...");
			scan.nextLine();
		}
	}
	
	
	public Main() {
		mainMenu();
	}

	public static void main(String[] args) {
		new Main();

	}

}
